options(repos = structure(c(CRAN = "http://cran.revolutionanalytics.com/"))); tryCatch(library(MCMCpack), error = function(e){install.packages("MCMCpack")}, finally = library(MCMCpack))
#hyperparams
m = 1
n_0 = 1
sigsq_0 = 1
#data
n = 3
true_beta0 = 2
true_beta1 = -2
true_sigsq = 1
xs = seq(0, 1, length.out = n)
ys = true_beta0 + true_beta1 * xs + rnorm(n, 0, sqrt(true_sigsq))
plot(xs, ys)
mod = lm(ys ~ xs)
coef(mod)
abline(a = coef(mod)[1], b = coef(mod)[2])
#plot
24*23*22*21*20
set.seed(1984)
library(PTE)
data(cpt1) #this data is not publically available
s = Sys.time()
#Figure 4 (copy the following four lines of code)
res = bootstrap_inference(X, y,
"lm(y ~ intake_HRSD + iq_ship + age + chronic + treatment * (married + unemployed + life_stressors + pdstatus + drugs012), data = Xyleft)",
y_higher_is_better = FALSE, num_cores = 4,
B = 3000)
print(Sys.time() - s)
#Figure 5 (run the next line and copy the output save the BCa intervals)
res
par(mar = c(2, 0, 0.5, 0))
B = 3000
min_q = min(res$q_scores$average, res$q_scores$best)
max_q = max(res$q_scores$average, res$q_scores$best)
#Figure 6a
hist(res$q_scores$average, br = B / 25, xlab = "", xlim = c(min_q, max_q), main = "", ylab = "", yaxt = "n", col = rgb(0.9, 0.9, 0.9), border = rgb(0.8, 0.8, 0.8)) #, main = "I_Avg's"
abline(v = res$observed_q_average, col = "black", lwd = 4)
abline(v = res$ci_q_average[1], col = "black", lwd = 1)
abline(v = res$ci_q_average[2], col = "black", lwd = 1)
hist(res$q_scores$best, br = B / 25, xlab = "", xlim = c(min_q, max_q), main = "", ylab = "", yaxt = "n", col = rgb(0.9, 0.9, 0.9), border = rgb(0.8, 0.8, 0.8)) #, main = "I_Best's"
abline(v = res$observed_q_best, col = "black", lwd = 4)
abline(v = res$ci_q_best[1], col = "black", lwd = 1)
abline(v = res$ci_q_best[2], col = "black", lwd = 1)
hist(res$q_scores$average, br = B / 25, xlab = "", xlim = c(min_q, max_q), main = "", ylab = "", yaxt = "n", col = rgb(0.9, 0.9, 0.9), border = rgb(0.8, 0.8, 0.8)) #, main = "I_Avg's"
abline(v = res$observed_q_average, col = "black", lwd = 4)
abline(v = res$ci_q_average[1], col = "black", lwd = 1)
abline(v = res$ci_q_average[2], col = "black", lwd = 1)
par(mfrow = c(1,1))
par(mar = c(2, 0, 0.5, 0))
hist(res$q_scores$average, br = B / 25, xlab = "", xlim = c(min_q, max_q), main = "", ylab = "", yaxt = "n", col = rgb(0.9, 0.9, 0.9), border = rgb(0.8, 0.8, 0.8)) #, main = "I_Avg's"
abline(v = res$observed_q_average, col = "black", lwd = 4)
abline(v = res$ci_q_average[1], col = "black", lwd = 1)
abline(v = res$ci_q_average[2], col = "black", lwd = 1)
hist(res$q_scores$best, br = B / 25, xlab = "", xlim = c(min_q, max_q), main = "", ylab = "", yaxt = "n", col = rgb(0.9, 0.9, 0.9), border = rgb(0.8, 0.8, 0.8)) #, main = "I_Best's"
abline(v = res$observed_q_best, col = "black", lwd = 4)
abline(v = res$ci_q_best[1], col = "black", lwd = 1)
abline(v = res$ci_q_best[2], col = "black", lwd = 1)
hist(res$q_scores$average, br = B / 25, xlab = "", xlim = c(min_q, max_q), main = "", ylab = "", yaxt = "n", col = rgb(0.9, 0.9, 0.9), border = rgb(0.8, 0.8, 0.8)) #, main = "I_Avg's"
abline(v = res$observed_q_average, col = "black", lwd = 4)
abline(v = res$ci_q_average[1], col = "black", lwd = 1)
abline(v = res$ci_q_average[2], col = "black", lwd = 1)
hist(res$q_scores$best, br = B / 25, xlab = "", xlim = c(min_q, max_q), main = "", ylab = "", yaxt = "n", col = rgb(0.9, 0.9, 0.9), border = rgb(0.8, 0.8, 0.8)) #, main = "I_Best's"
abline(v = res$observed_q_best, col = "black", lwd = 4)
abline(v = res$ci_q_best[1], col = "black", lwd = 1)
abline(v = res$ci_q_best[2], col = "black", lwd = 1)
setwd("C:/Users/Kapelner/workspace/GreedyExperimentalDesign/GreedyExperimentalDesign")
install.packages("Roxygen2")
install.packages("roxygen2")
library(roxygen2); roxygenise("GreedyExperimentalDesign", clean = TRUE)
setwd("C:/Users/Kapelner/workspace/GreedyExperimentalDesign")
setwd("C:/Users/Kapelner/workspace/GreedyExperimentalDesign")
library(roxygen2); roxygenise("GreedyExperimentalDesign", clean = TRUE)
library(roxygen2); roxygenise("GreedyExperimentalDesign", clean = TRUE)
library(GreedyExperimentalDesign)
vignette(GreedyExperimentalDesign)
vignette("GreedyExperimentalDesign"")
)
""
vignette("GreedyExperimentalDesign")
library(roxygen2); roxygenise("GreedyExperimentalDesign", clean = TRUE)
